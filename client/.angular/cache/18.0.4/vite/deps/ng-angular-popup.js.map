{
  "version": 3,
  "sources": ["../../../../../node_modules/@angular/animations/fesm2022/animations.mjs", "../../../../../node_modules/ng-angular-popup/fesm2022/ng-angular-popup.mjs"],
  "sourcesContent": ["/**\n * @license Angular v18.0.3\n * (c) 2010-2024 Google LLC. https://angular.io/\n * License: MIT\n */\n\nimport { DOCUMENT } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { inject, Injectable, ANIMATION_MODULE_TYPE, ViewEncapsulation, ÉµRuntimeError, Inject } from '@angular/core';\n\n/**\n * @description Constants for the categories of parameters that can be defined for animations.\n *\n * A corresponding function defines a set of parameters for each category, and\n * collects them into a corresponding `AnimationMetadata` object.\n *\n * @publicApi\n */\nvar AnimationMetadataType;\n(function (AnimationMetadataType) {\n  /**\n   * Associates a named animation state with a set of CSS styles.\n   * See [`state()`](api/animations/state)\n   */\n  AnimationMetadataType[AnimationMetadataType[\"State\"] = 0] = \"State\";\n  /**\n   * Data for a transition from one animation state to another.\n   * See `transition()`\n   */\n  AnimationMetadataType[AnimationMetadataType[\"Transition\"] = 1] = \"Transition\";\n  /**\n   * Contains a set of animation steps.\n   * See `sequence()`\n   */\n  AnimationMetadataType[AnimationMetadataType[\"Sequence\"] = 2] = \"Sequence\";\n  /**\n   * Contains a set of animation steps.\n   * See `{@link animations/group group()}`\n   */\n  AnimationMetadataType[AnimationMetadataType[\"Group\"] = 3] = \"Group\";\n  /**\n   * Contains an animation step.\n   * See `animate()`\n   */\n  AnimationMetadataType[AnimationMetadataType[\"Animate\"] = 4] = \"Animate\";\n  /**\n   * Contains a set of animation steps.\n   * See `keyframes()`\n   */\n  AnimationMetadataType[AnimationMetadataType[\"Keyframes\"] = 5] = \"Keyframes\";\n  /**\n   * Contains a set of CSS property-value pairs into a named style.\n   * See `style()`\n   */\n  AnimationMetadataType[AnimationMetadataType[\"Style\"] = 6] = \"Style\";\n  /**\n   * Associates an animation with an entry trigger that can be attached to an element.\n   * See `trigger()`\n   */\n  AnimationMetadataType[AnimationMetadataType[\"Trigger\"] = 7] = \"Trigger\";\n  /**\n   * Contains a re-usable animation.\n   * See `animation()`\n   */\n  AnimationMetadataType[AnimationMetadataType[\"Reference\"] = 8] = \"Reference\";\n  /**\n   * Contains data to use in executing child animations returned by a query.\n   * See `animateChild()`\n   */\n  AnimationMetadataType[AnimationMetadataType[\"AnimateChild\"] = 9] = \"AnimateChild\";\n  /**\n   * Contains animation parameters for a re-usable animation.\n   * See `useAnimation()`\n   */\n  AnimationMetadataType[AnimationMetadataType[\"AnimateRef\"] = 10] = \"AnimateRef\";\n  /**\n   * Contains child-animation query data.\n   * See `query()`\n   */\n  AnimationMetadataType[AnimationMetadataType[\"Query\"] = 11] = \"Query\";\n  /**\n   * Contains data for staggering an animation sequence.\n   * See `stagger()`\n   */\n  AnimationMetadataType[AnimationMetadataType[\"Stagger\"] = 12] = \"Stagger\";\n})(AnimationMetadataType || (AnimationMetadataType = {}));\n/**\n * Specifies automatic styling.\n *\n * @publicApi\n */\nconst AUTO_STYLE = '*';\n/**\n * Creates a named animation trigger, containing a  list of [`state()`](api/animations/state)\n * and `transition()` entries to be evaluated when the expression\n * bound to the trigger changes.\n *\n * @param name An identifying string.\n * @param definitions  An animation definition object, containing an array of\n * [`state()`](api/animations/state) and `transition()` declarations.\n *\n * @return An object that encapsulates the trigger data.\n *\n * @usageNotes\n * Define an animation trigger in the `animations` section of `@Component` metadata.\n * In the template, reference the trigger by name and bind it to a trigger expression that\n * evaluates to a defined animation state, using the following format:\n *\n * `[@triggerName]=\"expression\"`\n *\n * Animation trigger bindings convert all values to strings, and then match the\n * previous and current values against any linked transitions.\n * Booleans can be specified as `1` or `true` and `0` or `false`.\n *\n * ### Usage Example\n *\n * The following example creates an animation trigger reference based on the provided\n * name value.\n * The provided animation value is expected to be an array consisting of state and\n * transition declarations.\n *\n * ```typescript\n * @Component({\n *   selector: \"my-component\",\n *   templateUrl: \"my-component-tpl.html\",\n *   animations: [\n *     trigger(\"myAnimationTrigger\", [\n *       state(...),\n *       state(...),\n *       transition(...),\n *       transition(...)\n *     ])\n *   ]\n * })\n * class MyComponent {\n *   myStatusExp = \"something\";\n * }\n * ```\n *\n * The template associated with this component makes use of the defined trigger\n * by binding to an element within its template code.\n *\n * ```html\n * <!-- somewhere inside of my-component-tpl.html -->\n * <div [@myAnimationTrigger]=\"myStatusExp\">...</div>\n * ```\n *\n * ### Using an inline function\n * The `transition` animation method also supports reading an inline function which can decide\n * if its associated animation should be run.\n *\n * ```typescript\n * // this method is run each time the `myAnimationTrigger` trigger value changes.\n * function myInlineMatcherFn(fromState: string, toState: string, element: any, params: {[key:\n string]: any}): boolean {\n *   // notice that `element` and `params` are also available here\n *   return toState == 'yes-please-animate';\n * }\n *\n * @Component({\n *   selector: 'my-component',\n *   templateUrl: 'my-component-tpl.html',\n *   animations: [\n *     trigger('myAnimationTrigger', [\n *       transition(myInlineMatcherFn, [\n *         // the animation sequence code\n *       ]),\n *     ])\n *   ]\n * })\n * class MyComponent {\n *   myStatusExp = \"yes-please-animate\";\n * }\n * ```\n *\n * ### Disabling Animations\n * When true, the special animation control binding `@.disabled` binding prevents\n * all animations from rendering.\n * Place the  `@.disabled` binding on an element to disable\n * animations on the element itself, as well as any inner animation triggers\n * within the element.\n *\n * The following example shows how to use this feature:\n *\n * ```typescript\n * @Component({\n *   selector: 'my-component',\n *   template: `\n *     <div [@.disabled]=\"isDisabled\">\n *       <div [@childAnimation]=\"exp\"></div>\n *     </div>\n *   `,\n *   animations: [\n *     trigger(\"childAnimation\", [\n *       // ...\n *     ])\n *   ]\n * })\n * class MyComponent {\n *   isDisabled = true;\n *   exp = '...';\n * }\n * ```\n *\n * When `@.disabled` is true, it prevents the `@childAnimation` trigger from animating,\n * along with any inner animations.\n *\n * ### Disable animations application-wide\n * When an area of the template is set to have animations disabled,\n * **all** inner components have their animations disabled as well.\n * This means that you can disable all animations for an app\n * by placing a host binding set on `@.disabled` on the topmost Angular component.\n *\n * ```typescript\n * import {Component, HostBinding} from '@angular/core';\n *\n * @Component({\n *   selector: 'app-component',\n *   templateUrl: 'app.component.html',\n * })\n * class AppComponent {\n *   @HostBinding('@.disabled')\n *   public animationsDisabled = true;\n * }\n * ```\n *\n * ### Overriding disablement of inner animations\n * Despite inner animations being disabled, a parent animation can `query()`\n * for inner elements located in disabled areas of the template and still animate\n * them if needed. This is also the case for when a sub animation is\n * queried by a parent and then later animated using `animateChild()`.\n *\n * ### Detecting when an animation is disabled\n * If a region of the DOM (or the entire application) has its animations disabled, the animation\n * trigger callbacks still fire, but for zero seconds. When the callback fires, it provides\n * an instance of an `AnimationEvent`. If animations are disabled,\n * the `.disabled` flag on the event is true.\n *\n * @publicApi\n */\nfunction trigger(name, definitions) {\n  return {\n    type: AnimationMetadataType.Trigger,\n    name,\n    definitions,\n    options: {}\n  };\n}\n/**\n * Defines an animation step that combines styling information with timing information.\n *\n * @param timings Sets `AnimateTimings` for the parent animation.\n * A string in the format \"duration [delay] [easing]\".\n *  - Duration and delay are expressed as a number and optional time unit,\n * such as \"1s\" or \"10ms\" for one second and 10 milliseconds, respectively.\n * The default unit is milliseconds.\n *  - The easing value controls how the animation accelerates and decelerates\n * during its runtime. Value is one of  `ease`, `ease-in`, `ease-out`,\n * `ease-in-out`, or a `cubic-bezier()` function call.\n * If not supplied, no easing is applied.\n *\n * For example, the string \"1s 100ms ease-out\" specifies a duration of\n * 1000 milliseconds, and delay of 100 ms, and the \"ease-out\" easing style,\n * which decelerates near the end of the duration.\n * @param styles Sets AnimationStyles for the parent animation.\n * A function call to either `style()` or `keyframes()`\n * that returns a collection of CSS style entries to be applied to the parent animation.\n * When null, uses the styles from the destination state.\n * This is useful when describing an animation step that will complete an animation;\n * see \"Animating to the final state\" in `transitions()`.\n * @returns An object that encapsulates the animation step.\n *\n * @usageNotes\n * Call within an animation `sequence()`, `{@link animations/group group()}`, or\n * `transition()` call to specify an animation step\n * that applies given style data to the parent animation for a given amount of time.\n *\n * ### Syntax Examples\n * **Timing examples**\n *\n * The following examples show various `timings` specifications.\n * - `animate(500)` : Duration is 500 milliseconds.\n * - `animate(\"1s\")` : Duration is 1000 milliseconds.\n * - `animate(\"100ms 0.5s\")` : Duration is 100 milliseconds, delay is 500 milliseconds.\n * - `animate(\"5s ease-in\")` : Duration is 5000 milliseconds, easing in.\n * - `animate(\"5s 10ms cubic-bezier(.17,.67,.88,.1)\")` : Duration is 5000 milliseconds, delay is 10\n * milliseconds, easing according to a bezier curve.\n *\n * **Style examples**\n *\n * The following example calls `style()` to set a single CSS style.\n * ```typescript\n * animate(500, style({ background: \"red\" }))\n * ```\n * The following example calls `keyframes()` to set a CSS style\n * to different values for successive keyframes.\n * ```typescript\n * animate(500, keyframes(\n *  [\n *   style({ background: \"blue\" }),\n *   style({ background: \"red\" })\n *  ])\n * ```\n *\n * @publicApi\n */\nfunction animate(timings, styles = null) {\n  return {\n    type: AnimationMetadataType.Animate,\n    styles,\n    timings\n  };\n}\n/**\n * @description Defines a list of animation steps to be run in parallel.\n *\n * @param steps An array of animation step objects.\n * - When steps are defined by `style()` or `animate()`\n * function calls, each call within the group is executed instantly.\n * - To specify offset styles to be applied at a later time, define steps with\n * `keyframes()`, or use `animate()` calls with a delay value.\n * For example:\n *\n * ```typescript\n * group([\n *   animate(\"1s\", style({ background: \"black\" })),\n *   animate(\"2s\", style({ color: \"white\" }))\n * ])\n * ```\n *\n * @param options An options object containing a delay and\n * developer-defined parameters that provide styling defaults and\n * can be overridden on invocation.\n *\n * @return An object that encapsulates the group data.\n *\n * @usageNotes\n * Grouped animations are useful when a series of styles must be\n * animated at different starting times and closed off at different ending times.\n *\n * When called within a `sequence()` or a\n * `transition()` call, does not continue to the next\n * instruction until all of the inner animation steps have completed.\n *\n * @publicApi\n */\nfunction group(steps, options = null) {\n  return {\n    type: AnimationMetadataType.Group,\n    steps,\n    options\n  };\n}\n/**\n * Defines a list of animation steps to be run sequentially, one by one.\n *\n * @param steps An array of animation step objects.\n * - Steps defined by `style()` calls apply the styling data immediately.\n * - Steps defined by `animate()` calls apply the styling data over time\n *   as specified by the timing data.\n *\n * ```typescript\n * sequence([\n *   style({ opacity: 0 }),\n *   animate(\"1s\", style({ opacity: 1 }))\n * ])\n * ```\n *\n * @param options An options object containing a delay and\n * developer-defined parameters that provide styling defaults and\n * can be overridden on invocation.\n *\n * @return An object that encapsulates the sequence data.\n *\n * @usageNotes\n * When you pass an array of steps to a\n * `transition()` call, the steps run sequentially by default.\n * Compare this to the `{@link animations/group group()}` call, which runs animation steps in\n *parallel.\n *\n * When a sequence is used within a `{@link animations/group group()}` or a `transition()` call,\n * execution continues to the next instruction only after each of the inner animation\n * steps have completed.\n *\n * @publicApi\n **/\nfunction sequence(steps, options = null) {\n  return {\n    type: AnimationMetadataType.Sequence,\n    steps,\n    options\n  };\n}\n/**\n * Declares a key/value object containing CSS properties/styles that\n * can then be used for an animation [`state`](api/animations/state), within an animation\n *`sequence`, or as styling data for calls to `animate()` and `keyframes()`.\n *\n * @param tokens A set of CSS styles or HTML styles associated with an animation state.\n * The value can be any of the following:\n * - A key-value style pair associating a CSS property with a value.\n * - An array of key-value style pairs.\n * - An asterisk (*), to use auto-styling, where styles are derived from the element\n * being animated and applied to the animation when it starts.\n *\n * Auto-styling can be used to define a state that depends on layout or other\n * environmental factors.\n *\n * @return An object that encapsulates the style data.\n *\n * @usageNotes\n * The following examples create animation styles that collect a set of\n * CSS property values:\n *\n * ```typescript\n * // string values for CSS properties\n * style({ background: \"red\", color: \"blue\" })\n *\n * // numerical pixel values\n * style({ width: 100, height: 0 })\n * ```\n *\n * The following example uses auto-styling to allow an element to animate from\n * a height of 0 up to its full height:\n *\n * ```\n * style({ height: 0 }),\n * animate(\"1s\", style({ height: \"*\" }))\n * ```\n *\n * @publicApi\n **/\nfunction style(tokens) {\n  return {\n    type: AnimationMetadataType.Style,\n    styles: tokens,\n    offset: null\n  };\n}\n/**\n * Declares an animation state within a trigger attached to an element.\n *\n * @param name One or more names for the defined state in a comma-separated string.\n * The following reserved state names can be supplied to define a style for specific use\n * cases:\n *\n * - `void` You can associate styles with this name to be used when\n * the element is detached from the application. For example, when an `ngIf` evaluates\n * to false, the state of the associated element is void.\n *  - `*` (asterisk) Indicates the default state. You can associate styles with this name\n * to be used as the fallback when the state that is being animated is not declared\n * within the trigger.\n *\n * @param styles A set of CSS styles associated with this state, created using the\n * `style()` function.\n * This set of styles persists on the element once the state has been reached.\n * @param options Parameters that can be passed to the state when it is invoked.\n * 0 or more key-value pairs.\n * @return An object that encapsulates the new state data.\n *\n * @usageNotes\n * Use the `trigger()` function to register states to an animation trigger.\n * Use the `transition()` function to animate between states.\n * When a state is active within a component, its associated styles persist on the element,\n * even when the animation ends.\n *\n * @publicApi\n **/\nfunction state(name, styles, options) {\n  return {\n    type: AnimationMetadataType.State,\n    name,\n    styles,\n    options\n  };\n}\n/**\n * Defines a set of animation styles, associating each style with an optional `offset` value.\n *\n * @param steps A set of animation styles with optional offset data.\n * The optional `offset` value for a style specifies a percentage of the total animation\n * time at which that style is applied.\n * @returns An object that encapsulates the keyframes data.\n *\n * @usageNotes\n * Use with the `animate()` call. Instead of applying animations\n * from the current state\n * to the destination state, keyframes describe how each style entry is applied and at what point\n * within the animation arc.\n * Compare [CSS Keyframe Animations](https://www.w3schools.com/css/css3_animations.asp).\n *\n * ### Usage\n *\n * In the following example, the offset values describe\n * when each `backgroundColor` value is applied. The color is red at the start, and changes to\n * blue when 20% of the total time has elapsed.\n *\n * ```typescript\n * // the provided offset values\n * animate(\"5s\", keyframes([\n *   style({ backgroundColor: \"red\", offset: 0 }),\n *   style({ backgroundColor: \"blue\", offset: 0.2 }),\n *   style({ backgroundColor: \"orange\", offset: 0.3 }),\n *   style({ backgroundColor: \"black\", offset: 1 })\n * ]))\n * ```\n *\n * If there are no `offset` values specified in the style entries, the offsets\n * are calculated automatically.\n *\n * ```typescript\n * animate(\"5s\", keyframes([\n *   style({ backgroundColor: \"red\" }) // offset = 0\n *   style({ backgroundColor: \"blue\" }) // offset = 0.33\n *   style({ backgroundColor: \"orange\" }) // offset = 0.66\n *   style({ backgroundColor: \"black\" }) // offset = 1\n * ]))\n *```\n\n * @publicApi\n */\nfunction keyframes(steps) {\n  return {\n    type: AnimationMetadataType.Keyframes,\n    steps\n  };\n}\n/**\n * Declares an animation transition which is played when a certain specified condition is met.\n *\n * @param stateChangeExpr A string with a specific format or a function that specifies when the\n * animation transition should occur (see [State Change Expression](#state-change-expression)).\n *\n * @param steps One or more animation objects that represent the animation's instructions.\n *\n * @param options An options object that can be used to specify a delay for the animation or provide\n * custom parameters for it.\n *\n * @returns An object that encapsulates the transition data.\n *\n * @usageNotes\n *\n * ### State Change Expression\n *\n * The State Change Expression instructs Angular when to run the transition's animations, it can\n *either be\n *  - a string with a specific syntax\n *  - or a function that compares the previous and current state (value of the expression bound to\n *    the element's trigger) and returns `true` if the transition should occur or `false` otherwise\n *\n * The string format can be:\n *  - `fromState => toState`, which indicates that the transition's animations should occur then the\n *    expression bound to the trigger's element goes from `fromState` to `toState`\n *\n *    _Example:_\n *      ```typescript\n *        transition('open => closed', animate('.5s ease-out', style({ height: 0 }) ))\n *      ```\n *\n *  - `fromState <=> toState`, which indicates that the transition's animations should occur then\n *    the expression bound to the trigger's element goes from `fromState` to `toState` or vice versa\n *\n *    _Example:_\n *      ```typescript\n *        transition('enabled <=> disabled', animate('1s cubic-bezier(0.8,0.3,0,1)'))\n *      ```\n *\n *  - `:enter`/`:leave`, which indicates that the transition's animations should occur when the\n *    element enters or exists the DOM\n *\n *    _Example:_\n *      ```typescript\n *        transition(':enter', [\n *          style({ opacity: 0 }),\n *          animate('500ms', style({ opacity: 1 }))\n *        ])\n *      ```\n *\n *  - `:increment`/`:decrement`, which indicates that the transition's animations should occur when\n *    the numerical expression bound to the trigger's element has increased in value or decreased\n *\n *    _Example:_\n *      ```typescript\n *        transition(':increment', query('@counter', animateChild()))\n *      ```\n *\n *  - a sequence of any of the above divided by commas, which indicates that transition's animations\n *    should occur whenever one of the state change expressions matches\n *\n *    _Example:_\n *      ```typescript\n *        transition(':increment, * => enabled, :enter', animate('1s ease', keyframes([\n *          style({ transform: 'scale(1)', offset: 0}),\n *          style({ transform: 'scale(1.1)', offset: 0.7}),\n *          style({ transform: 'scale(1)', offset: 1})\n *        ]))),\n *      ```\n *\n * Also note that in such context:\n *  - `void` can be used to indicate the absence of the element\n *  - asterisks can be used as wildcards that match any state\n *  - (as a consequence of the above, `void => *` is equivalent to `:enter` and `* => void` is\n *    equivalent to `:leave`)\n *  - `true` and `false` also match expression values of `1` and `0` respectively (but do not match\n *    _truthy_ and _falsy_ values)\n *\n * <div class=\"alert is-helpful\">\n *\n *  Be careful about entering end leaving elements as their transitions present a common\n *  pitfall for developers.\n *\n *  Note that when an element with a trigger enters the DOM its `:enter` transition always\n *  gets executed, but its `:leave` transition will not be executed if the element is removed\n *  alongside its parent (as it will be removed \"without warning\" before its transition has\n *  a chance to be executed, the only way that such transition can occur is if the element\n *  is exiting the DOM on its own).\n *\n *\n * </div>\n *\n * ### Animating to a Final State\n *\n * If the final step in a transition is a call to `animate()` that uses a timing value\n * with no `style` data, that step is automatically considered the final animation arc,\n * for the element to reach the final state, in such case Angular automatically adds or removes\n * CSS styles to ensure that the element is in the correct final state.\n *\n *\n * ### Usage Examples\n *\n *  - Transition animations applied based on\n *    the trigger's expression value\n *\n *   ```HTML\n *   <div [@myAnimationTrigger]=\"myStatusExp\">\n *    ...\n *   </div>\n *   ```\n *\n *   ```typescript\n *   trigger(\"myAnimationTrigger\", [\n *     ..., // states\n *     transition(\"on => off, open => closed\", animate(500)),\n *     transition(\"* <=> error\", query('.indicator', animateChild()))\n *   ])\n *   ```\n *\n *  - Transition animations applied based on custom logic dependent\n *    on the trigger's expression value and provided parameters\n *\n *    ```HTML\n *    <div [@myAnimationTrigger]=\"{\n *     value: stepName,\n *     params: { target: currentTarget }\n *    }\">\n *     ...\n *    </div>\n *    ```\n *\n *    ```typescript\n *    trigger(\"myAnimationTrigger\", [\n *      ..., // states\n *      transition(\n *        (fromState, toState, _element, params) =>\n *          ['firststep', 'laststep'].includes(fromState.toLowerCase())\n *          && toState === params?.['target'],\n *        animate('1s')\n *      )\n *    ])\n *    ```\n *\n * @publicApi\n **/\nfunction transition(stateChangeExpr, steps, options = null) {\n  return {\n    type: AnimationMetadataType.Transition,\n    expr: stateChangeExpr,\n    animation: steps,\n    options\n  };\n}\n/**\n * Produces a reusable animation that can be invoked in another animation or sequence,\n * by calling the `useAnimation()` function.\n *\n * @param steps One or more animation objects, as returned by the `animate()`\n * or `sequence()` function, that form a transformation from one state to another.\n * A sequence is used by default when you pass an array.\n * @param options An options object that can contain a delay value for the start of the\n * animation, and additional developer-defined parameters.\n * Provided values for additional parameters are used as defaults,\n * and override values can be passed to the caller on invocation.\n * @returns An object that encapsulates the animation data.\n *\n * @usageNotes\n * The following example defines a reusable animation, providing some default parameter\n * values.\n *\n * ```typescript\n * var fadeAnimation = animation([\n *   style({ opacity: '{{ start }}' }),\n *   animate('{{ time }}',\n *   style({ opacity: '{{ end }}'}))\n *   ],\n *   { params: { time: '1000ms', start: 0, end: 1 }});\n * ```\n *\n * The following invokes the defined animation with a call to `useAnimation()`,\n * passing in override parameter values.\n *\n * ```js\n * useAnimation(fadeAnimation, {\n *   params: {\n *     time: '2s',\n *     start: 1,\n *     end: 0\n *   }\n * })\n * ```\n *\n * If any of the passed-in parameter values are missing from this call,\n * the default values are used. If one or more parameter values are missing before a step is\n * animated, `useAnimation()` throws an error.\n *\n * @publicApi\n */\nfunction animation(steps, options = null) {\n  return {\n    type: AnimationMetadataType.Reference,\n    animation: steps,\n    options\n  };\n}\n/**\n * Executes a queried inner animation element within an animation sequence.\n *\n * @param options An options object that can contain a delay value for the start of the\n * animation, and additional override values for developer-defined parameters.\n * @return An object that encapsulates the child animation data.\n *\n * @usageNotes\n * Each time an animation is triggered in Angular, the parent animation\n * has priority and any child animations are blocked. In order\n * for a child animation to run, the parent animation must query each of the elements\n * containing child animations, and run them using this function.\n *\n * Note that this feature is designed to be used with `query()` and it will only work\n * with animations that are assigned using the Angular animation library. CSS keyframes\n * and transitions are not handled by this API.\n *\n * @publicApi\n */\nfunction animateChild(options = null) {\n  return {\n    type: AnimationMetadataType.AnimateChild,\n    options\n  };\n}\n/**\n * Starts a reusable animation that is created using the `animation()` function.\n *\n * @param animation The reusable animation to start.\n * @param options An options object that can contain a delay value for the start of\n * the animation, and additional override values for developer-defined parameters.\n * @return An object that contains the animation parameters.\n *\n * @publicApi\n */\nfunction useAnimation(animation, options = null) {\n  return {\n    type: AnimationMetadataType.AnimateRef,\n    animation,\n    options\n  };\n}\n/**\n * Finds one or more inner elements within the current element that is\n * being animated within a sequence. Use with `animate()`.\n *\n * @param selector The element to query, or a set of elements that contain Angular-specific\n * characteristics, specified with one or more of the following tokens.\n *  - `query(\":enter\")` or `query(\":leave\")` : Query for newly inserted/removed elements (not\n *     all elements can be queried via these tokens, see\n *     [Entering and Leaving Elements](#entering-and-leaving-elements))\n *  - `query(\":animating\")` : Query all currently animating elements.\n *  - `query(\"@triggerName\")` : Query elements that contain an animation trigger.\n *  - `query(\"@*\")` : Query all elements that contain an animation triggers.\n *  - `query(\":self\")` : Include the current element into the animation sequence.\n *\n * @param animation One or more animation steps to apply to the queried element or elements.\n * An array is treated as an animation sequence.\n * @param options An options object. Use the 'limit' field to limit the total number of\n * items to collect.\n * @return An object that encapsulates the query data.\n *\n * @usageNotes\n *\n * ### Multiple Tokens\n *\n * Tokens can be merged into a combined query selector string. For example:\n *\n * ```typescript\n *  query(':self, .record:enter, .record:leave, @subTrigger', [...])\n * ```\n *\n * The `query()` function collects multiple elements and works internally by using\n * `element.querySelectorAll`. Use the `limit` field of an options object to limit\n * the total number of items to be collected. For example:\n *\n * ```js\n * query('div', [\n *   animate(...),\n *   animate(...)\n * ], { limit: 1 })\n * ```\n *\n * By default, throws an error when zero items are found. Set the\n * `optional` flag to ignore this error. For example:\n *\n * ```js\n * query('.some-element-that-may-not-be-there', [\n *   animate(...),\n *   animate(...)\n * ], { optional: true })\n * ```\n *\n * ### Entering and Leaving Elements\n *\n * Not all elements can be queried via the `:enter` and `:leave` tokens, the only ones\n * that can are those that Angular assumes can enter/leave based on their own logic\n * (if their insertion/removal is simply a consequence of that of their parent they\n * should be queried via a different token in their parent's `:enter`/`:leave` transitions).\n *\n * The only elements Angular assumes can enter/leave based on their own logic (thus the only\n * ones that can be queried via the `:enter` and `:leave` tokens) are:\n *  - Those inserted dynamically (via `ViewContainerRef`)\n *  - Those that have a structural directive (which, under the hood, are a subset of the above ones)\n *\n * <div class=\"alert is-helpful\">\n *\n *  Note that elements will be successfully queried via `:enter`/`:leave` even if their\n *  insertion/removal is not done manually via `ViewContainerRef`or caused by their structural\n *  directive (e.g. they enter/exit alongside their parent).\n *\n * </div>\n *\n * <div class=\"alert is-important\">\n *\n *  There is an exception to what previously mentioned, besides elements entering/leaving based on\n *  their own logic, elements with an animation trigger can always be queried via `:leave` when\n * their parent is also leaving.\n *\n * </div>\n *\n * ### Usage Example\n *\n * The following example queries for inner elements and animates them\n * individually using `animate()`.\n *\n * ```typescript\n * @Component({\n *   selector: 'inner',\n *   template: `\n *     <div [@queryAnimation]=\"exp\">\n *       <h1>Title</h1>\n *       <div class=\"content\">\n *         Blah blah blah\n *       </div>\n *     </div>\n *   `,\n *   animations: [\n *    trigger('queryAnimation', [\n *      transition('* => goAnimate', [\n *        // hide the inner elements\n *        query('h1', style({ opacity: 0 })),\n *        query('.content', style({ opacity: 0 })),\n *\n *        // animate the inner elements in, one by one\n *        query('h1', animate(1000, style({ opacity: 1 }))),\n *        query('.content', animate(1000, style({ opacity: 1 }))),\n *      ])\n *    ])\n *  ]\n * })\n * class Cmp {\n *   exp = '';\n *\n *   goAnimate() {\n *     this.exp = 'goAnimate';\n *   }\n * }\n * ```\n *\n * @publicApi\n */\nfunction query(selector, animation, options = null) {\n  return {\n    type: AnimationMetadataType.Query,\n    selector,\n    animation,\n    options\n  };\n}\n/**\n * Use within an animation `query()` call to issue a timing gap after\n * each queried item is animated.\n *\n * @param timings A delay value.\n * @param animation One ore more animation steps.\n * @returns An object that encapsulates the stagger data.\n *\n * @usageNotes\n * In the following example, a container element wraps a list of items stamped out\n * by an `ngFor`. The container element contains an animation trigger that will later be set\n * to query for each of the inner items.\n *\n * Each time items are added, the opacity fade-in animation runs,\n * and each removed item is faded out.\n * When either of these animations occur, the stagger effect is\n * applied after each item's animation is started.\n *\n * ```html\n * <!-- list.component.html -->\n * <button (click)=\"toggle()\">Show / Hide Items</button>\n * <hr />\n * <div [@listAnimation]=\"items.length\">\n *   <div *ngFor=\"let item of items\">\n *     {{ item }}\n *   </div>\n * </div>\n * ```\n *\n * Here is the component code:\n *\n * ```typescript\n * import {trigger, transition, style, animate, query, stagger} from '@angular/animations';\n * @Component({\n *   templateUrl: 'list.component.html',\n *   animations: [\n *     trigger('listAnimation', [\n *     ...\n *     ])\n *   ]\n * })\n * class ListComponent {\n *   items = [];\n *\n *   showItems() {\n *     this.items = [0,1,2,3,4];\n *   }\n *\n *   hideItems() {\n *     this.items = [];\n *   }\n *\n *   toggle() {\n *     this.items.length ? this.hideItems() : this.showItems();\n *    }\n *  }\n * ```\n *\n * Here is the animation trigger code:\n *\n * ```typescript\n * trigger('listAnimation', [\n *   transition('* => *', [ // each time the binding value changes\n *     query(':leave', [\n *       stagger(100, [\n *         animate('0.5s', style({ opacity: 0 }))\n *       ])\n *     ]),\n *     query(':enter', [\n *       style({ opacity: 0 }),\n *       stagger(100, [\n *         animate('0.5s', style({ opacity: 1 }))\n *       ])\n *     ])\n *   ])\n * ])\n * ```\n *\n * @publicApi\n */\nfunction stagger(timings, animation) {\n  return {\n    type: AnimationMetadataType.Stagger,\n    timings,\n    animation\n  };\n}\n\n/**\n * An injectable service that produces an animation sequence programmatically within an\n * Angular component or directive.\n * Provided by the `BrowserAnimationsModule` or `NoopAnimationsModule`.\n *\n * @usageNotes\n *\n * To use this service, add it to your component or directive as a dependency.\n * The service is instantiated along with your component.\n *\n * Apps do not typically need to create their own animation players, but if you\n * do need to, follow these steps:\n *\n * 1. Use the <code>[AnimationBuilder.build](api/animations/AnimationBuilder#build)()</code> method\n * to create a programmatic animation. The method returns an `AnimationFactory` instance.\n *\n * 2. Use the factory object to create an `AnimationPlayer` and attach it to a DOM element.\n *\n * 3. Use the player object to control the animation programmatically.\n *\n * For example:\n *\n * ```ts\n * // import the service from BrowserAnimationsModule\n * import {AnimationBuilder} from '@angular/animations';\n * // require the service as a dependency\n * class MyCmp {\n *   constructor(private _builder: AnimationBuilder) {}\n *\n *   makeAnimation(element: any) {\n *     // first define a reusable animation\n *     const myAnimation = this._builder.build([\n *       style({ width: 0 }),\n *       animate(1000, style({ width: '100px' }))\n *     ]);\n *\n *     // use the returned factory object to create a player\n *     const player = myAnimation.create(element);\n *\n *     player.play();\n *   }\n * }\n * ```\n *\n * @publicApi\n */\nclass AnimationBuilder {\n  static {\n    this.Éµfac = function AnimationBuilder_Factory(t) {\n      return new (t || AnimationBuilder)();\n    };\n  }\n  static {\n    this.Éµprov = /* @__PURE__ */i0.ÉµÉµdefineInjectable({\n      token: AnimationBuilder,\n      factory: () => (() => inject(BrowserAnimationBuilder))(),\n      providedIn: 'root'\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ÉµsetClassMetadata(AnimationBuilder, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root',\n      useFactory: () => inject(BrowserAnimationBuilder)\n    }]\n  }], null, null);\n})();\n/**\n * A factory object returned from the\n * <code>[AnimationBuilder.build](api/animations/AnimationBuilder#build)()</code>\n * method.\n *\n * @publicApi\n */\nclass AnimationFactory {}\nclass BrowserAnimationBuilder extends AnimationBuilder {\n  constructor(rootRenderer, doc) {\n    super();\n    this.animationModuleType = inject(ANIMATION_MODULE_TYPE, {\n      optional: true\n    });\n    this._nextAnimationId = 0;\n    const typeData = {\n      id: '0',\n      encapsulation: ViewEncapsulation.None,\n      styles: [],\n      data: {\n        animation: []\n      }\n    };\n    this._renderer = rootRenderer.createRenderer(doc.body, typeData);\n    if (this.animationModuleType === null && !isAnimationRenderer(this._renderer)) {\n      // We only support AnimationRenderer & DynamicDelegationRenderer for this AnimationBuilder\n      throw new ÉµRuntimeError(3600 /* RuntimeErrorCode.BROWSER_ANIMATION_BUILDER_INJECTED_WITHOUT_ANIMATIONS */, (typeof ngDevMode === 'undefined' || ngDevMode) && 'Angular detected that the `AnimationBuilder` was injected, but animation support was not enabled. ' + 'Please make sure that you enable animations in your application by calling `provideAnimations()` or `provideAnimationsAsync()` function.');\n    }\n  }\n  build(animation) {\n    const id = this._nextAnimationId;\n    this._nextAnimationId++;\n    const entry = Array.isArray(animation) ? sequence(animation) : animation;\n    issueAnimationCommand(this._renderer, null, id, 'register', [entry]);\n    return new BrowserAnimationFactory(id, this._renderer);\n  }\n  static {\n    this.Éµfac = function BrowserAnimationBuilder_Factory(t) {\n      return new (t || BrowserAnimationBuilder)(i0.ÉµÉµinject(i0.RendererFactory2), i0.ÉµÉµinject(DOCUMENT));\n    };\n  }\n  static {\n    this.Éµprov = /* @__PURE__ */i0.ÉµÉµdefineInjectable({\n      token: BrowserAnimationBuilder,\n      factory: BrowserAnimationBuilder.Éµfac,\n      providedIn: 'root'\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ÉµsetClassMetadata(BrowserAnimationBuilder, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], () => [{\n    type: i0.RendererFactory2\n  }, {\n    type: Document,\n    decorators: [{\n      type: Inject,\n      args: [DOCUMENT]\n    }]\n  }], null);\n})();\nclass BrowserAnimationFactory extends AnimationFactory {\n  constructor(_id, _renderer) {\n    super();\n    this._id = _id;\n    this._renderer = _renderer;\n  }\n  create(element, options) {\n    return new RendererAnimationPlayer(this._id, element, options || {}, this._renderer);\n  }\n}\nclass RendererAnimationPlayer {\n  constructor(id, element, options, _renderer) {\n    this.id = id;\n    this.element = element;\n    this._renderer = _renderer;\n    this.parentPlayer = null;\n    this._started = false;\n    this.totalTime = 0;\n    this._command('create', options);\n  }\n  _listen(eventName, callback) {\n    return this._renderer.listen(this.element, `@@${this.id}:${eventName}`, callback);\n  }\n  _command(command, ...args) {\n    issueAnimationCommand(this._renderer, this.element, this.id, command, args);\n  }\n  onDone(fn) {\n    this._listen('done', fn);\n  }\n  onStart(fn) {\n    this._listen('start', fn);\n  }\n  onDestroy(fn) {\n    this._listen('destroy', fn);\n  }\n  init() {\n    this._command('init');\n  }\n  hasStarted() {\n    return this._started;\n  }\n  play() {\n    this._command('play');\n    this._started = true;\n  }\n  pause() {\n    this._command('pause');\n  }\n  restart() {\n    this._command('restart');\n  }\n  finish() {\n    this._command('finish');\n  }\n  destroy() {\n    this._command('destroy');\n  }\n  reset() {\n    this._command('reset');\n    this._started = false;\n  }\n  setPosition(p) {\n    this._command('setPosition', p);\n  }\n  getPosition() {\n    return unwrapAnimationRenderer(this._renderer)?.engine?.players[this.id]?.getPosition() ?? 0;\n  }\n}\nfunction issueAnimationCommand(renderer, element, id, command, args) {\n  renderer.setProperty(element, `@@${id}:${command}`, args);\n}\n/**\n * The following 2 methods cannot reference their correct types (AnimationRenderer &\n * DynamicDelegationRenderer) since this would introduce a import cycle.\n */\nfunction unwrapAnimationRenderer(renderer) {\n  const type = renderer.Éµtype;\n  if (type === 0 /* AnimationRendererType.Regular */) {\n    return renderer;\n  } else if (type === 1 /* AnimationRendererType.Delegated */) {\n    return renderer.animationRenderer;\n  }\n  return null;\n}\nfunction isAnimationRenderer(renderer) {\n  const type = renderer.Éµtype;\n  return type === 0 /* AnimationRendererType.Regular */ || type === 1 /* AnimationRendererType.Delegated */;\n}\n\n/**\n * An empty programmatic controller for reusable animations.\n * Used internally when animations are disabled, to avoid\n * checking for the null case when an animation player is expected.\n *\n * @see {@link animate}\n * @see {@link AnimationPlayer}\n * @see {@link ÉµAnimationGroupPlayer AnimationGroupPlayer}\n *\n * @publicApi\n */\nclass NoopAnimationPlayer {\n  constructor(duration = 0, delay = 0) {\n    this._onDoneFns = [];\n    this._onStartFns = [];\n    this._onDestroyFns = [];\n    this._originalOnDoneFns = [];\n    this._originalOnStartFns = [];\n    this._started = false;\n    this._destroyed = false;\n    this._finished = false;\n    this._position = 0;\n    this.parentPlayer = null;\n    this.totalTime = duration + delay;\n  }\n  _onFinish() {\n    if (!this._finished) {\n      this._finished = true;\n      this._onDoneFns.forEach(fn => fn());\n      this._onDoneFns = [];\n    }\n  }\n  onStart(fn) {\n    this._originalOnStartFns.push(fn);\n    this._onStartFns.push(fn);\n  }\n  onDone(fn) {\n    this._originalOnDoneFns.push(fn);\n    this._onDoneFns.push(fn);\n  }\n  onDestroy(fn) {\n    this._onDestroyFns.push(fn);\n  }\n  hasStarted() {\n    return this._started;\n  }\n  init() {}\n  play() {\n    if (!this.hasStarted()) {\n      this._onStart();\n      this.triggerMicrotask();\n    }\n    this._started = true;\n  }\n  /** @internal */\n  triggerMicrotask() {\n    queueMicrotask(() => this._onFinish());\n  }\n  _onStart() {\n    this._onStartFns.forEach(fn => fn());\n    this._onStartFns = [];\n  }\n  pause() {}\n  restart() {}\n  finish() {\n    this._onFinish();\n  }\n  destroy() {\n    if (!this._destroyed) {\n      this._destroyed = true;\n      if (!this.hasStarted()) {\n        this._onStart();\n      }\n      this.finish();\n      this._onDestroyFns.forEach(fn => fn());\n      this._onDestroyFns = [];\n    }\n  }\n  reset() {\n    this._started = false;\n    this._finished = false;\n    this._onStartFns = this._originalOnStartFns;\n    this._onDoneFns = this._originalOnDoneFns;\n  }\n  setPosition(position) {\n    this._position = this.totalTime ? position * this.totalTime : 1;\n  }\n  getPosition() {\n    return this.totalTime ? this._position / this.totalTime : 1;\n  }\n  /** @internal */\n  triggerCallback(phaseName) {\n    const methods = phaseName == 'start' ? this._onStartFns : this._onDoneFns;\n    methods.forEach(fn => fn());\n    methods.length = 0;\n  }\n}\n\n/**\n * A programmatic controller for a group of reusable animations.\n * Used internally to control animations.\n *\n * @see {@link AnimationPlayer}\n * @see {@link animations/group group}\n *\n */\nclass AnimationGroupPlayer {\n  constructor(_players) {\n    this._onDoneFns = [];\n    this._onStartFns = [];\n    this._finished = false;\n    this._started = false;\n    this._destroyed = false;\n    this._onDestroyFns = [];\n    this.parentPlayer = null;\n    this.totalTime = 0;\n    this.players = _players;\n    let doneCount = 0;\n    let destroyCount = 0;\n    let startCount = 0;\n    const total = this.players.length;\n    if (total == 0) {\n      queueMicrotask(() => this._onFinish());\n    } else {\n      this.players.forEach(player => {\n        player.onDone(() => {\n          if (++doneCount == total) {\n            this._onFinish();\n          }\n        });\n        player.onDestroy(() => {\n          if (++destroyCount == total) {\n            this._onDestroy();\n          }\n        });\n        player.onStart(() => {\n          if (++startCount == total) {\n            this._onStart();\n          }\n        });\n      });\n    }\n    this.totalTime = this.players.reduce((time, player) => Math.max(time, player.totalTime), 0);\n  }\n  _onFinish() {\n    if (!this._finished) {\n      this._finished = true;\n      this._onDoneFns.forEach(fn => fn());\n      this._onDoneFns = [];\n    }\n  }\n  init() {\n    this.players.forEach(player => player.init());\n  }\n  onStart(fn) {\n    this._onStartFns.push(fn);\n  }\n  _onStart() {\n    if (!this.hasStarted()) {\n      this._started = true;\n      this._onStartFns.forEach(fn => fn());\n      this._onStartFns = [];\n    }\n  }\n  onDone(fn) {\n    this._onDoneFns.push(fn);\n  }\n  onDestroy(fn) {\n    this._onDestroyFns.push(fn);\n  }\n  hasStarted() {\n    return this._started;\n  }\n  play() {\n    if (!this.parentPlayer) {\n      this.init();\n    }\n    this._onStart();\n    this.players.forEach(player => player.play());\n  }\n  pause() {\n    this.players.forEach(player => player.pause());\n  }\n  restart() {\n    this.players.forEach(player => player.restart());\n  }\n  finish() {\n    this._onFinish();\n    this.players.forEach(player => player.finish());\n  }\n  destroy() {\n    this._onDestroy();\n  }\n  _onDestroy() {\n    if (!this._destroyed) {\n      this._destroyed = true;\n      this._onFinish();\n      this.players.forEach(player => player.destroy());\n      this._onDestroyFns.forEach(fn => fn());\n      this._onDestroyFns = [];\n    }\n  }\n  reset() {\n    this.players.forEach(player => player.reset());\n    this._destroyed = false;\n    this._finished = false;\n    this._started = false;\n  }\n  setPosition(p) {\n    const timeAtPosition = p * this.totalTime;\n    this.players.forEach(player => {\n      const position = player.totalTime ? Math.min(1, timeAtPosition / player.totalTime) : 1;\n      player.setPosition(position);\n    });\n  }\n  getPosition() {\n    const longestPlayer = this.players.reduce((longestSoFar, player) => {\n      const newPlayerIsLongest = longestSoFar === null || player.totalTime > longestSoFar.totalTime;\n      return newPlayerIsLongest ? player : longestSoFar;\n    }, null);\n    return longestPlayer != null ? longestPlayer.getPosition() : 0;\n  }\n  beforeDestroy() {\n    this.players.forEach(player => {\n      if (player.beforeDestroy) {\n        player.beforeDestroy();\n      }\n    });\n  }\n  /** @internal */\n  triggerCallback(phaseName) {\n    const methods = phaseName == 'start' ? this._onStartFns : this._onDoneFns;\n    methods.forEach(fn => fn());\n    methods.length = 0;\n  }\n}\nconst ÉµPRE_STYLE = '!';\n\n/**\n * @module\n * @description\n * Entry point for all animation APIs of the animation package.\n */\n\n/**\n * @module\n * @description\n * Entry point for all public APIs of this package.\n */\n\n// This file is not used to build this module. It is only used during editing\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { AUTO_STYLE, AnimationBuilder, AnimationFactory, AnimationMetadataType, NoopAnimationPlayer, animate, animateChild, animation, group, keyframes, query, sequence, stagger, state, style, transition, trigger, useAnimation, AnimationGroupPlayer as ÉµAnimationGroupPlayer, BrowserAnimationBuilder as ÉµBrowserAnimationBuilder, ÉµPRE_STYLE };\n", "import * as i0 from '@angular/core';\nimport { Injectable, input, inject, ElementRef, Directive, Component, NgModule } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\nimport { trigger, transition, style, animate } from '@angular/animations';\nimport * as i2 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nfunction NgToastComponent_div_1_Conditional_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ÉµÉµelementStart(0, \"span\", 7);\n    i0.ÉµÉµtext(1);\n    i0.ÉµÉµelementEnd();\n  }\n  if (rf & 2) {\n    const message_r2 = i0.ÉµÉµnextContext().$implicit;\n    i0.ÉµÉµadvance();\n    i0.ÉµÉµtextInterpolate(message_r2.title);\n  }\n}\nfunction NgToastComponent_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r1 = i0.ÉµÉµgetCurrentView();\n    i0.ÉµÉµelementStart(0, \"div\", 2)(1, \"div\", 3)(2, \"div\", 4);\n    i0.ÉµÉµelement(3, \"div\", 5);\n    i0.ÉµÉµelementEnd();\n    i0.ÉµÉµelementStart(4, \"div\", 6);\n    i0.ÉµÉµtemplate(5, NgToastComponent_div_1_Conditional_5_Template, 2, 1, \"span\", 7);\n    i0.ÉµÉµelementStart(6, \"span\", 8);\n    i0.ÉµÉµtext(7);\n    i0.ÉµÉµelementEnd()()();\n    i0.ÉµÉµelementStart(8, \"button\", 9);\n    i0.ÉµÉµlistener(\"click\", function NgToastComponent_div_1_Template_button_click_8_listener() {\n      const message_r2 = i0.ÉµÉµrestoreView(_r1).$implicit;\n      const ctx_r2 = i0.ÉµÉµnextContext();\n      return i0.ÉµÉµresetView(ctx_r2.remove(message_r2));\n    });\n    i0.ÉµÉµnamespaceSVG();\n    i0.ÉµÉµelementStart(9, \"svg\", 10);\n    i0.ÉµÉµelement(10, \"path\", 11);\n    i0.ÉµÉµelementEnd()()();\n  }\n  if (rf & 2) {\n    const message_r2 = ctx.$implicit;\n    const ctx_r2 = i0.ÉµÉµnextContext();\n    i0.ÉµÉµproperty(\"ngClass\", message_r2.type)(\"@showHide\", undefined);\n    i0.ÉµÉµadvance(2);\n    i0.ÉµÉµproperty(\"ngClass\", message_r2.type);\n    i0.ÉµÉµadvance();\n    i0.ÉµÉµproperty(\"toastIcon\", message_r2.type);\n    i0.ÉµÉµadvance(2);\n    i0.ÉµÉµconditional(message_r2.title && message_r2.title !== \"\" ? 5 : -1);\n    i0.ÉµÉµadvance();\n    i0.ÉµÉµstylePropInterpolate1(\"max-width\", \"\", ctx_r2.width() - 30, \"px\");\n    i0.ÉµÉµadvance();\n    i0.ÉµÉµtextInterpolate(message_r2.message);\n    i0.ÉµÉµadvance();\n    i0.ÉµÉµproperty(\"ngClass\", message_r2.type);\n  }\n}\nclass ToastMessage {\n  constructor(message, type, title, duration = 2000) {\n    this.message = message;\n    this.type = type;\n    this.title = title;\n    this.duration = duration;\n    this.id = new Date().getTime();\n  }\n}\nvar ToastType;\n(function (ToastType) {\n  ToastType[\"PRIMARY\"] = \"toast-primary\";\n  ToastType[\"SECONDARY\"] = \"toast-secondary\";\n  ToastType[\"SUCCESS\"] = \"toast-success\";\n  ToastType[\"INFO\"] = \"toast-info\";\n  ToastType[\"WARNING\"] = \"toast-warning\";\n  ToastType[\"DANGER\"] = \"toast-danger\";\n})(ToastType || (ToastType = {}));\n\n/**\n * Service for displaying toast messages.\n */\nclass NgToastService {\n  #defaultDuration;\n  #toastMessageSource;\n  /**\n   * Constructs a new NgToastService instance.\n   */\n  constructor() {\n    this.#defaultDuration = 2000;\n    this.#toastMessageSource = new Subject();\n  }\n  /**\n   * Displays a toast message.\n   * @param message The message to display.\n   * @param type The type of the toast message.\n   * @param title The optional title of the toast message.\n   * @param duration The duration in milliseconds for which the toast message should be displayed. Defaults to the default duration.\n   */\n  toast(message, type, title, duration = this.#defaultDuration) {\n    this.#toastMessageSource.next(new ToastMessage(message, type, title, duration));\n  }\n  /**\n   * Displays a success toast message.\n   * @param message The message to display.\n   * @param title The optional title of the toast message.\n   * @param duration The duration in milliseconds for which the toast message should be displayed. Defaults to the default duration.\n   */\n  success(message, title, duration = this.#defaultDuration) {\n    this.toast(message, ToastType.SUCCESS, title, duration);\n  }\n  /**\n   * Displays an info toast message.\n   * @param message The message to display.\n   * @param title The optional title of the toast message.\n   * @param duration The duration in milliseconds for which the toast message should be displayed. Defaults to the default duration.\n   */\n  info(message, title, duration = this.#defaultDuration) {\n    this.toast(message, ToastType.INFO, title, duration);\n  }\n  /**\n   * Displays a warning toast message.\n   * @param message The message to display.\n   * @param title The optional title of the toast message.\n   * @param duration The duration in milliseconds for which the toast message should be displayed. Defaults to the default duration.\n   */\n  warning(message, title, duration = this.#defaultDuration) {\n    this.toast(message, ToastType.WARNING, title, duration);\n  }\n  /**\n   * Displays a danger/error toast message.\n   * @param message The message to display.\n   * @param title The optional title of the toast message.\n   * @param duration The duration in milliseconds for which the toast message should be displayed. Defaults to the default duration.\n   */\n  danger(message, title, duration = this.#defaultDuration) {\n    this.toast(message, ToastType.DANGER, title, duration);\n  }\n  /**\n   * Returns an observable that emits the toast messages.\n   * @returns An observable that emits the toast messages.\n   */\n  onToastMessage() {\n    return this.#toastMessageSource.asObservable();\n  }\n  static {\n    this.Éµfac = function NgToastService_Factory(t) {\n      return new (t || NgToastService)();\n    };\n  }\n  static {\n    this.Éµprov = /* @__PURE__ */i0.ÉµÉµdefineInjectable({\n      token: NgToastService,\n      factory: NgToastService.Éµfac,\n      providedIn: 'root'\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ÉµsetClassMetadata(NgToastService, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], () => [], null);\n})();\nvar ToasterPosition;\n(function (ToasterPosition) {\n  ToasterPosition[\"TOP_LEFT\"] = \"toaster-top-left\";\n  ToasterPosition[\"TOP_CENTER\"] = \"toaster-top-center\";\n  ToasterPosition[\"TOP_RIGHT\"] = \"toaster-top-right\";\n  ToasterPosition[\"BOTTOM_LEFT\"] = \"toaster-bottom-left\";\n  ToasterPosition[\"BOTTOM_CENTER\"] = \"toaster-bottom-center\";\n  ToasterPosition[\"BOTTOM_RIGHT\"] = \"toaster-bottom-right\";\n})(ToasterPosition || (ToasterPosition = {}));\nclass ToastIconDirective {\n  constructor() {\n    this.type = input.required({\n      alias: 'toastIcon'\n    });\n    this.#el = inject(ElementRef);\n  }\n  #el;\n  ngOnInit() {\n    this.setIcon();\n  }\n  setIcon() {\n    let svgContent;\n    switch (this.type()) {\n      case 'toast-success':\n        svgContent = `\n          <svg width=\"14\" height=\"14\" viewBox=\"0 0 448 512\">\n            <path fill=\"#ffffff\" d=\"M438.6 105.4c12.5 12.5 12.5 32.8 0 45.3l-256 256c-12.5 12.5-32.8 12.5-45.3 0l-128-128c-12.5-12.5-12.5-32.8 0-45.3s32.8-12.5 45.3 0L160 338.7 393.4 105.4c12.5-12.5 32.8-12.5 45.3 0z\"/>\n          </svg>`;\n        break;\n      case 'toast-danger':\n        svgContent = `\n          <svg width=\"14\" height=\"14\" viewBox=\"0 0 384 512\">\n            <path fill=\"#ffffff\" d=\"M342.6 150.6c12.5-12.5 12.5-32.8 0-45.3s-32.8-12.5-45.3 0L192 210.7 86.6 105.4c-12.5-12.5-32.8-12.5-45.3 0s-12.5 32.8 0 45.3L146.7 256 41.4 361.4c-12.5 12.5-12.5 32.8 0 45.3s32.8 12.5 45.3 0L192 301.3 297.4 406.6c12.5 12.5 32.8 12.5 45.3 0s12.5-32.8 0-45.3L237.3 256 342.6 150.6z\"/>\n          </svg>`;\n        break;\n      case 'toast-info':\n        svgContent = `\n          <svg width=\"14\" height=\"14\" viewBox=\"0 0 192 512\">\n            <path fill=\"#ffffff\" d=\"M48 80a48 48 0 1 1 96 0A48 48 0 1 1 48 80zM0 224c0-17.7 14.3-32 32-32H96c17.7 0 32 14.3 32 32V448h32c17.7 0 32 14.3 32 32s-14.3 32-32 32H32c-17.7 0-32-14.3-32-32s14.3-32 32-32H64V256H32c-17.7 0-32-14.3-32-32z\"/>\n          </svg>`;\n        break;\n      case 'toast-warning':\n        svgContent = `\n          <svg width=\"14\" height=\"14\" viewBox=\"0 0 64 512\">\n            <path fill=\"#ffffff\" d=\"M64 64c0-17.7-14.3-32-32-32S0 46.3 0 64V320c0 17.7 14.3 32 32 32s32-14.3 32-32V64zM32 480a40 40 0 1 0 0-80 40 40 0 1 0 0 80z\"/>\n          </svg>`;\n        break;\n      default:\n        svgContent = '';\n    }\n    this.#el.nativeElement.innerHTML = svgContent;\n  }\n  static {\n    this.Éµfac = function ToastIconDirective_Factory(t) {\n      return new (t || ToastIconDirective)();\n    };\n  }\n  static {\n    this.Éµdir = /* @__PURE__ */i0.ÉµÉµdefineDirective({\n      type: ToastIconDirective,\n      selectors: [[\"\", \"toastIcon\", \"\"]],\n      inputs: {\n        type: [1, \"toastIcon\", \"type\"]\n      }\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ÉµsetClassMetadata(ToastIconDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[toastIcon]'\n    }]\n  }], null, null);\n})();\nclass NgToastComponent {\n  constructor(toastService) {\n    this.toastService = toastService;\n    this.position = input(ToasterPosition.BOTTOM_RIGHT);\n    this.width = input(350);\n    this.ToastType = ToastType;\n    this._toasterSubject$ = new Subject();\n    this.messages = [];\n  }\n  ngOnInit() {\n    this.toastService.onToastMessage().pipe(takeUntil(this._toasterSubject$)).subscribe(message => this._handleToastMessage(message));\n  }\n  _handleToastMessage(message) {\n    if (this._isToasterPositionTop()) {\n      this.messages.unshift(message);\n    } else {\n      this.messages.push(message);\n    }\n    setTimeout(() => this._removeMessage(message), message.duration);\n  }\n  _isToasterPositionTop() {\n    return this.position() === ToasterPosition.TOP_LEFT || this.position() === ToasterPosition.TOP_CENTER || this.position() === ToasterPosition.TOP_RIGHT;\n  }\n  _removeMessage(message) {\n    const index = this.messages.findIndex(e => e.id === message.id);\n    if (index > -1) {\n      this.messages.splice(index, 1);\n    }\n  }\n  remove(message) {\n    this._removeMessage(message);\n  }\n  ngOnDestroy() {\n    this._toasterSubject$.next();\n    this._toasterSubject$.complete();\n  }\n  static {\n    this.Éµfac = function NgToastComponent_Factory(t) {\n      return new (t || NgToastComponent)(i0.ÉµÉµdirectiveInject(NgToastService));\n    };\n  }\n  static {\n    this.Éµcmp = /* @__PURE__ */i0.ÉµÉµdefineComponent({\n      type: NgToastComponent,\n      selectors: [[\"ng-toast\"]],\n      inputs: {\n        position: [1, \"position\"],\n        width: [1, \"width\"]\n      },\n      decls: 2,\n      vars: 8,\n      consts: [[1, \"toaster\", 3, \"ngClass\"], [\"class\", \"toast-message\", 3, \"ngClass\", 4, \"ngFor\", \"ngForOf\"], [1, \"toast-message\", 3, \"ngClass\"], [1, \"flex-start-center\", \"gap-3\"], [1, \"toast-icon\", 3, \"ngClass\"], [1, \"toast-icon\", 3, \"toastIcon\"], [1, \"flex-col\"], [1, \"msg-title\"], [1, \"msg-summary\"], [1, \"cross-icon\", 3, \"click\", \"ngClass\"], [\"width\", \"10\", \"height\", \"10\", \"viewBox\", \"0 0 14 14\", \"fill\", \"none\", \"aria-hidden\", \"true\", 1, \"p-icon\", \"p-toast-icon-close-icon\"], [\"d\", \"M8.01186 7.00933L12.27 2.75116C12.341 2.68501 12.398 2.60524 12.4375 2.51661C12.4769 2.42798 12.4982 2.3323 12.4999 2.23529C12.5016 2.13827 12.4838 2.0419 12.4474 1.95194C12.4111 1.86197 12.357 1.78024 12.2884 1.71163C12.2198 1.64302 12.138 1.58893 12.0481 1.55259C11.9581 1.51625 11.8617 1.4984 11.7647 1.50011C11.6677 1.50182 11.572 1.52306 11.4834 1.56255C11.3948 1.60204 11.315 1.65898 11.2488 1.72997L6.99067 5.98814L2.7325 1.72997C2.59553 1.60234 2.41437 1.53286 2.22718 1.53616C2.03999 1.53946 1.8614 1.61529 1.72901 1.74767C1.59663 1.88006 1.5208 2.05865 1.5175 2.24584C1.5142 2.43303 1.58368 2.61419 1.71131 2.75116L5.96948 7.00933L1.71131 11.2675C1.576 11.403 1.5 11.5866 1.5 11.7781C1.5 11.9696 1.576 12.1532 1.71131 12.2887C1.84679 12.424 2.03043 12.5 2.2219 12.5C2.41338 12.5 2.59702 12.424 2.7325 12.2887L6.99067 8.03052L11.2488 12.2887C11.3843 12.424 11.568 12.5 11.7594 12.5C11.9509 12.5 12.1346 12.424 12.27 12.2887C12.4053 12.1532 12.4813 11.9696 12.4813 11.7781C12.4813 11.5866 12.4053 11.403 12.27 11.2675L8.01186 7.00933Z\", \"fill\", \"currentColor\"]],\n      template: function NgToastComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ÉµÉµelementStart(0, \"div\", 0);\n          i0.ÉµÉµtemplate(1, NgToastComponent_div_1_Template, 11, 10, \"div\", 1);\n          i0.ÉµÉµelementEnd();\n        }\n        if (rf & 2) {\n          i0.ÉµÉµstylePropInterpolate1(\"min-width\", \"\", ctx.width(), \"px\")(\"max-width\", \"\", ctx.width(), \"px\");\n          i0.ÉµÉµproperty(\"ngClass\", ctx.position());\n          i0.ÉµÉµadvance();\n          i0.ÉµÉµproperty(\"ngForOf\", ctx.messages);\n        }\n      },\n      dependencies: [i2.NgClass, i2.NgForOf, ToastIconDirective],\n      styles: [\".toaster[_ngcontent-%COMP%]{position:fixed;z-index:999;min-width:400px;max-width:400px;font-family:sans-serif}.toaster[_ngcontent-%COMP%]   .toast-message[_ngcontent-%COMP%]{padding:1rem;margin-bottom:1rem;border-radius:6px;border:1px solid;word-break:break-all;display:flex;justify-content:space-between;align-items:center;word-break:break-word}.toaster[_ngcontent-%COMP%]   .toast-message[_ngcontent-%COMP%]:last-child{margin-bottom:0}.toaster[_ngcontent-%COMP%]   .toast-message.toast-primary[_ngcontent-%COMP%]{background:#e9e9ff;color:#2599bb}.toaster[_ngcontent-%COMP%]   .toast-message.toast-secondary[_ngcontent-%COMP%]{background:#627fa2;color:#283443}.toaster[_ngcontent-%COMP%]   .toast-message.toast-success[_ngcontent-%COMP%]{background:#e4f8f0;color:#34b189}.toaster[_ngcontent-%COMP%]   .toast-message.toast-info[_ngcontent-%COMP%]{background:#ebebff;color:#787aff}.toaster[_ngcontent-%COMP%]   .toast-message.toast-warning[_ngcontent-%COMP%]{background:#fff2e2;color:#ffc120}.toaster[_ngcontent-%COMP%]   .toast-message.toast-danger[_ngcontent-%COMP%]{background:#ffe7e7;color:#ff7070}.toaster[_ngcontent-%COMP%]   .toast-message[_ngcontent-%COMP%]   .msg-title[_ngcontent-%COMP%]{font-size:1rem;color:#000;font-weight:600;word-break:break-word;max-width:240px}.toaster[_ngcontent-%COMP%]   .toast-message[_ngcontent-%COMP%]   .msg-summary[_ngcontent-%COMP%]{font-size:.9rem;color:#626262;font-weight:400;word-break:break-word;line-height:1.2rem}.toaster.toaster-top-left[_ngcontent-%COMP%]{margin-top:1rem;margin-left:1rem;top:0;left:0}.toaster.toaster-top-center[_ngcontent-%COMP%]{margin-top:1rem;top:0;left:50%;transform:translate(-50%)}.toaster.toaster-top-right[_ngcontent-%COMP%]{margin-top:1rem;margin-right:1rem;top:0;right:0}.toaster.toaster-bottom-left[_ngcontent-%COMP%]{margin-bottom:1rem;margin-left:1rem;bottom:0;left:0}.toaster.toaster-bottom-center[_ngcontent-%COMP%]{margin-bottom:1rem;bottom:0;left:50%;transform:translate(-50%)}.toaster.toaster-bottom-right[_ngcontent-%COMP%]{margin-bottom:1rem;margin-right:1rem;bottom:0;right:0}@media (max-width: 478px){.toaster[_ngcontent-%COMP%]{margin-left:0!important;margin-right:0!important;left:50%!important;transform:translate(-50%)!important;min-width:300px!important;max-width:300px}}.flex-start-center[_ngcontent-%COMP%]{display:flex;justify-content:flex-start;align-items:center}.gap-3[_ngcontent-%COMP%]{gap:10px}.p-icon[_ngcontent-%COMP%]{width:1rem;height:1rem}.toast-icon[_ngcontent-%COMP%]{border-radius:50%;color:#fff;padding:2px;display:flex;justify-content:center;align-items:center}.toast-icon.toast-success[_ngcontent-%COMP%], .toast-icon.toast-primary[_ngcontent-%COMP%], .toast-icon.toast-secondary[_ngcontent-%COMP%]{background:#34b189}.toast-icon.toast-info[_ngcontent-%COMP%]{background:#787aff}.toast-icon.toast-warning[_ngcontent-%COMP%]{background:#ffc120}.toast-icon.toast-danger[_ngcontent-%COMP%]{background:#ff6767}.cross-icon[_ngcontent-%COMP%]{background:transparent;outline:none;border:none;cursor:pointer}.cross-icon.toast-success[_ngcontent-%COMP%], .cross-icon.toast-primary[_ngcontent-%COMP%], .cross-icon.toast-secondary[_ngcontent-%COMP%]{color:#34b189}.cross-icon.toast-info[_ngcontent-%COMP%]{color:#787aff}.cross-icon.toast-warning[_ngcontent-%COMP%]{color:#ffc120}.cross-icon.toast-danger[_ngcontent-%COMP%]{color:#ff6767}.flex-col[_ngcontent-%COMP%]{display:flex;flex-direction:column;gap:.375rem}\"],\n      data: {\n        animation: [trigger('showHide', [transition(':enter', [style({\n          opacity: 0,\n          transform: 'scaleX(0.98) scaleY(0)',\n          position: 'relative'\n        }), animate('250ms', style({\n          opacity: 1,\n          transform: 'scale(1)'\n        }))]), transition(':leave', [style({\n          opacity: 1,\n          transform: 'scale(1)'\n        }), animate('250ms', style({\n          opacity: 0,\n          transform: 'scaleX(0.98) scaleY(0)'\n        }))])])]\n      }\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ÉµsetClassMetadata(NgToastComponent, [{\n    type: Component,\n    args: [{\n      selector: 'ng-toast',\n      animations: [trigger('showHide', [transition(':enter', [style({\n        opacity: 0,\n        transform: 'scaleX(0.98) scaleY(0)',\n        position: 'relative'\n      }), animate('250ms', style({\n        opacity: 1,\n        transform: 'scale(1)'\n      }))]), transition(':leave', [style({\n        opacity: 1,\n        transform: 'scale(1)'\n      }), animate('250ms', style({\n        opacity: 0,\n        transform: 'scaleX(0.98) scaleY(0)'\n      }))])])],\n      template: \"<div style.min-width=\\\"{{width()}}px\\\" style.max-width=\\\"{{width()}}px\\\" class=\\\"toaster\\\" [ngClass]=\\\"position()\\\">\\n\\n  <div class=\\\"toast-message\\\" *ngFor=\\\"let message of messages\\\" [ngClass]=\\\"message.type\\\" [@showHide]>\\n    <div class=\\\"flex-start-center gap-3\\\">\\n      <div [ngClass]=\\\"message.type\\\" class=\\\"toast-icon\\\">\\n        <div [toastIcon]=\\\"message.type\\\" class=\\\"toast-icon\\\"></div>\\n      </div>\\n      <div class=\\\"flex-col\\\">\\n        @if (message.title && message.title !== '') {\\n          <span class=\\\"msg-title\\\">{{message.title}}</span>\\n        }\\n        <span style.max-width=\\\"{{width() - 30}}px\\\" class=\\\"msg-summary\\\">{{message.message}}</span>\\n      </div>\\n    </div>\\n    <button (click)=\\\"remove(message)\\\" [ngClass]=\\\"message.type\\\" class=\\\"cross-icon\\\">\\n      <svg width=\\\"10\\\" height=\\\"10\\\" viewBox=\\\"0 0 14 14\\\" fill=\\\"none\\\" class=\\\"p-icon p-toast-icon-close-icon\\\"\\n        aria-hidden=\\\"true\\\">\\n        <path\\n          d=\\\"M8.01186 7.00933L12.27 2.75116C12.341 2.68501 12.398 2.60524 12.4375 2.51661C12.4769 2.42798 12.4982 2.3323 12.4999 2.23529C12.5016 2.13827 12.4838 2.0419 12.4474 1.95194C12.4111 1.86197 12.357 1.78024 12.2884 1.71163C12.2198 1.64302 12.138 1.58893 12.0481 1.55259C11.9581 1.51625 11.8617 1.4984 11.7647 1.50011C11.6677 1.50182 11.572 1.52306 11.4834 1.56255C11.3948 1.60204 11.315 1.65898 11.2488 1.72997L6.99067 5.98814L2.7325 1.72997C2.59553 1.60234 2.41437 1.53286 2.22718 1.53616C2.03999 1.53946 1.8614 1.61529 1.72901 1.74767C1.59663 1.88006 1.5208 2.05865 1.5175 2.24584C1.5142 2.43303 1.58368 2.61419 1.71131 2.75116L5.96948 7.00933L1.71131 11.2675C1.576 11.403 1.5 11.5866 1.5 11.7781C1.5 11.9696 1.576 12.1532 1.71131 12.2887C1.84679 12.424 2.03043 12.5 2.2219 12.5C2.41338 12.5 2.59702 12.424 2.7325 12.2887L6.99067 8.03052L11.2488 12.2887C11.3843 12.424 11.568 12.5 11.7594 12.5C11.9509 12.5 12.1346 12.424 12.27 12.2887C12.4053 12.1532 12.4813 11.9696 12.4813 11.7781C12.4813 11.5866 12.4053 11.403 12.27 11.2675L8.01186 7.00933Z\\\"\\n          fill=\\\"currentColor\\\"></path>\\n      </svg></button>\\n  </div>\\n</div>\\n\",\n      styles: [\".toaster{position:fixed;z-index:999;min-width:400px;max-width:400px;font-family:sans-serif}.toaster .toast-message{padding:1rem;margin-bottom:1rem;border-radius:6px;border:1px solid;word-break:break-all;display:flex;justify-content:space-between;align-items:center;word-break:break-word}.toaster .toast-message:last-child{margin-bottom:0}.toaster .toast-message.toast-primary{background:#e9e9ff;color:#2599bb}.toaster .toast-message.toast-secondary{background:#627fa2;color:#283443}.toaster .toast-message.toast-success{background:#e4f8f0;color:#34b189}.toaster .toast-message.toast-info{background:#ebebff;color:#787aff}.toaster .toast-message.toast-warning{background:#fff2e2;color:#ffc120}.toaster .toast-message.toast-danger{background:#ffe7e7;color:#ff7070}.toaster .toast-message .msg-title{font-size:1rem;color:#000;font-weight:600;word-break:break-word;max-width:240px}.toaster .toast-message .msg-summary{font-size:.9rem;color:#626262;font-weight:400;word-break:break-word;line-height:1.2rem}.toaster.toaster-top-left{margin-top:1rem;margin-left:1rem;top:0;left:0}.toaster.toaster-top-center{margin-top:1rem;top:0;left:50%;transform:translate(-50%)}.toaster.toaster-top-right{margin-top:1rem;margin-right:1rem;top:0;right:0}.toaster.toaster-bottom-left{margin-bottom:1rem;margin-left:1rem;bottom:0;left:0}.toaster.toaster-bottom-center{margin-bottom:1rem;bottom:0;left:50%;transform:translate(-50%)}.toaster.toaster-bottom-right{margin-bottom:1rem;margin-right:1rem;bottom:0;right:0}@media (max-width: 478px){.toaster{margin-left:0!important;margin-right:0!important;left:50%!important;transform:translate(-50%)!important;min-width:300px!important;max-width:300px}}.flex-start-center{display:flex;justify-content:flex-start;align-items:center}.gap-3{gap:10px}.p-icon{width:1rem;height:1rem}.toast-icon{border-radius:50%;color:#fff;padding:2px;display:flex;justify-content:center;align-items:center}.toast-icon.toast-success,.toast-icon.toast-primary,.toast-icon.toast-secondary{background:#34b189}.toast-icon.toast-info{background:#787aff}.toast-icon.toast-warning{background:#ffc120}.toast-icon.toast-danger{background:#ff6767}.cross-icon{background:transparent;outline:none;border:none;cursor:pointer}.cross-icon.toast-success,.cross-icon.toast-primary,.cross-icon.toast-secondary{color:#34b189}.cross-icon.toast-info{color:#787aff}.cross-icon.toast-warning{color:#ffc120}.cross-icon.toast-danger{color:#ff6767}.flex-col{display:flex;flex-direction:column;gap:.375rem}\\n\"]\n    }]\n  }], () => [{\n    type: NgToastService\n  }], null);\n})();\nclass NgToastModule {\n  static {\n    this.Éµfac = function NgToastModule_Factory(t) {\n      return new (t || NgToastModule)();\n    };\n  }\n  static {\n    this.Éµmod = /* @__PURE__ */i0.ÉµÉµdefineNgModule({\n      type: NgToastModule,\n      declarations: [NgToastComponent, ToastIconDirective],\n      imports: [CommonModule],\n      exports: [NgToastComponent, ToastIconDirective]\n    });\n  }\n  static {\n    this.Éµinj = /* @__PURE__ */i0.ÉµÉµdefineInjector({\n      imports: [CommonModule]\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ÉµsetClassMetadata(NgToastModule, [{\n    type: NgModule,\n    args: [{\n      declarations: [NgToastComponent, ToastIconDirective],\n      imports: [CommonModule],\n      exports: [NgToastComponent, ToastIconDirective]\n    }]\n  }], null, null);\n})();\n\n/*\n * Public API Surface of ng-toast\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { NgToastComponent, NgToastModule, NgToastService, ToastIconDirective, ToastMessage, ToastType, ToasterPosition };\n"],
  "mappings": "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",
  "names": ["AnimationMetadataType", "ToastType", "ToasterPosition"]
}
